// FIXME(https://docs.gradle.org/4.1-rc-2/userguide/plugins.html#sec:build_scripts_only):
// Replace buildscript+apply with just
// plugins {
//     id 'gradle-node-plugin' version '1.2.0'
// }
buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}
apply plugin: com.moowork.gradle.node.NodePlugin

ext {
    firebaseDir = file("${project.projectDir}/firebase")
}

node {
    download = true
    nodeModulesDir = firebaseDir
}

task convertBoltToFirebaseRules(type: NodeTask, dependsOn: npmInstall) {
    workingDir = firebaseDir
    script = file("${node.nodeModulesDir}/node_modules/.bin/firebase-bolt")
    args = ['rules.bolt', '-o', 'delern-rules.json']
}

task bowerInstall(type: NodeTask, dependsOn: npmInstall) {
    workingDir = "${firebaseDir}/www"
    script = file("${node.nodeModulesDir}/node_modules/.bin/bower")
    args = ['--allow-root', 'install']
}

task lintPolymer(type: NodeTask, dependsOn: [npmInstall, bowerInstall]) {
    workingDir = "${firebaseDir}/www"
    script = file("${node.nodeModulesDir}/node_modules/.bin/polymer")
    args = ['lint']
}

task buildPolymer(type: NodeTask, dependsOn: [npmInstall, bowerInstall]) {
    workingDir = "${firebaseDir}/www"
    script = file("${node.nodeModulesDir}/node_modules/.bin/polymer")
    args = ['build']
}

if (project.hasProperty('firebaseProject')) {
    task deployFirebase(type: NodeTask, dependsOn: [
      convertBoltToFirebaseRules,
      buildPolymer,
    ]) {
        workingDir = firebaseDir
        script = file("${node.nodeModulesDir}/node_modules/.bin/firebase")
        args = ['-P', project.property('firebaseProject'), 'deploy']
    }
}

testClasses.dependsOn convertBoltToFirebaseRules
