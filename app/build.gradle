apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'
apply from: "$rootDir/quality/quality-android.gradle"

ext {
    git = org.ajoberstar.grgit.Grgit.open()
    gitVersionCode = git.log(includes: ['HEAD']).size()
    gitVersionName = "${git.describe()}${git.status().clean ? "" : "*"}"
    leakCanaryVersion = '1.5.4'
}

android {
    compileSdkVersion sdkVersion
    buildToolsVersion toolsVersion
    testBuildType 'instrumented'

    sourceSets {
        main {
            // An ugly, but necessary hack. Adding full-fledged Android (AAR)
            // dependencies to :core wasts too much effort on compatibility.
            java.srcDirs += ['../core/src/main/java']
        }
    }

    signingConfigs {
        release {
            storeFile file('delern.jks')
            keyAlias 'delern'
            storePassword System.getenv('ANDROID_KEYSTORE_PASSWORD')
            keyPassword System.getenv('ANDROID_KEYSTORE_KEY_PASSWORD')
        }
    }
    defaultConfig {
        applicationId 'org.dasfoo.delern'
        minSdkVersion 15
        targetSdkVersion sdkVersion
        versionCode gitVersionCode
        versionName gitVersionName
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        // The VectorDrawableCompat class in the Support Library allows you
        // to support VectorDrawable in Android 2.1 (API level 7) and higher.
        // https://developer.android.com/studio/write/vector-asset-studio.html
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            // Building a release to run Robo tests and publish to Google Play.
            signingConfig signingConfigs.release
            play {
                track = 'alpha'
                jsonFile = file('play-store-service-account.json')
                uploadImages = true
            }
            manifestPlaceholders = [appName: 'Delern']
            buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'true'

            minifyEnabled true
            // getDefaultProguardFile searches for the files in path-to-android-sdk/tools/proguard/.
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'src/release/proguard.txt'
        }
        instrumented {
            // Instrumented tests that require release-style optimizations.
            initWith release

            if (isIDE) {
                // Disable minifying (slow build, strips logger), make debuggable under Android Studio.
                minifyEnabled false
                debuggable true
                testCoverageEnabled true
                ext.enableCrashlytics = false
                buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'false'
            }

            signingConfig signingConfigs.debug
            applicationIdSuffix '.instrumented'
            versionNameSuffix '-instrumented'
            manifestPlaceholders = [appName: 'Delern TEST']

            // Minify and ProGuard don't work with coverage.
            if (project.hasProperty('coverageRun')) {
                testCoverageEnabled true
                minifyEnabled false
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'src/release/proguard.txt',
                    'src/instrumented/proguard.txt'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'src/release/proguard.txt',
                    'src/androidTest/proguard.txt'
        }
        debug {
            // https://developers.google.com/android/guides/google-services-plugin
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            manifestPlaceholders = [appName: 'Delern DEBUG']
            // To apply Proguard (e.g. to test the configuration), simply copy over
            // minifyEnabled and proguardFiles from "release" build type and add:
            //   debuggable false
            // Do not upload ProGuard mapping for debug (it's not obfuscated).
            ext.alwaysUpdateBuildId = false
            buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'true'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:support-v4:$supportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation "com.google.android.gms:play-services-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
    implementation "com.google.firebase:firebase-database:$firebaseVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseVersion"
    implementation "com.google.firebase:firebase-config:$firebaseVersion"
    implementation "com.google.firebase:firebase-invites:$firebaseVersion"

    implementation 'com.firebaseui:firebase-ui-database:2.2.0'
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    // TODO(ksheremet): update
    //noinspection NewerVersionAvailable
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    // FIXME(https://github.com/square/leakcanary/pull/633): enable in instrumented
    instrumentedImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    testImplementation 'junit:junit:4.12'

    //Espresso
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true
    }

    // ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Dagger2
    implementation 'com.google.dagger:dagger:2.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.12'

    // Markdown
    compile "com.atlassian.commonmark:commonmark:$commonmarkVersion"
    compile "com.atlassian.commonmark:commonmark-ext-gfm-tables:$commonmarkVersion"
}

apply plugin: 'com.google.gms.google-services'
