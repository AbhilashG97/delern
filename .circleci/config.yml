version: 2

jobs:
  build:
    docker:
    - image: dasfoo/dev:latest
    environment:
    - TERM: dumb
    - PAGER: cat
    steps:
    - checkout
    - run:
        name: "Prepare checked out Git repository"
        command: |
          git submodule sync
          git submodule update --init
          # We count tags to compute a version number; make sure renamed tags
          # (aka removed and re-added) do not count twice.
          git tag -l | xargs git tag -d
          git fetch --tags

    - restore_cache:
        keys:
        - v16-{{ arch }}-{{ .Branch }}-{{ checksum "flutter/pubspec.lock" }}
        - v16-{{ arch }}-{{ .Branch }}-
        - v16-{{ arch }}-master-

    - run:
        name: "Install dependencies"
        command: |
          ( cd firebase && npm install --no-save )
          ( cd firebase/functions && npm install --no-save )
          ( cd firebase/www && ../node_modules/.bin/bower --allow-root install )

          bundle install

          ( cd flutter && flutter packages get )
          echo "flutter.sdk=$FLUTTER_HOME" > flutter/android/local.properties
          ( cd flutter/android && ./gradlew resolveDependencies )

    - save_cache:
        # Use different keys because caches are immutable.
        key: v16-{{ arch }}-{{ .Branch }}-{{ checksum "flutter/pubspec.lock" }}
        paths:
        - ~/.npm
        - ~/project/.gradle
        - ~/project/.pub-cache
        - ~/project/firebase/node_modules
        - ~/project/firebase/functions/node_modules
        - ~/project/firebase/www/bower_components
        - ~/project/vendor/bundle

    - run:
        name: "Lint, assemble and run unit tests"
        no_output_timeout: "35m"
        command: |
          ( cd flutter && bundle exec fastlane build )
          ( cd flutter && bundle exec fastlane android build )

          if [ -n "$(git status --porcelain)" ]; then
            echo 'Working directory not clean after reformat / update:' >&2
            git status >&2
            git diff >&2
            exit 1
          fi

          ( cd flutter && flutter test --coverage )
          bash <(curl -s https://codecov.io/bash)

          ( cd firebase && npm run build )
          ( cd firebase/www && ../node_modules/.bin/polymer lint )

    - run:
        name: "[if branch=master] Deploy Firebase and build Release APK"
        command: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            # We use this account to access both Google Play account and GCS.
            # The former requires it to be in "app" subdirectory.
            echo "${GCLOUD_SERVICE_KEY}" | base64 --decode > flutter/android/app/play-store-service-account.json
            gcloud auth activate-service-account --key-file flutter/android/app/play-store-service-account.json
            mkdir -p ~/.android
            gsutil cp gs://dasfoo-keystore/debug.keystore ~/.android/
            gsutil cp gs://dasfoo-keystore/delern.jks flutter/android/app/

            # TODO(dotdoom): dedup against git status check after reformat.
            if [ -n "$(git status --porcelain)" ]; then
              echo 'Working directory not clean before production build:' >&2
              git status >&2
              git diff >&2
              exit 1
            fi

            ( cd firebase && PROJECT=delern-debug npm run deploy )
            ( cd firebase && PROJECT=delern-e1b33 npm run deploy )
            ( cd flutter && bundle exec fastlane android publish )
          fi

    - store_test_results:
        path: fastlane
    - store_artifacts:
        path: flutter/build/app/outputs
